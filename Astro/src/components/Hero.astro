---
// Hero.astro - Sección principal con video de fondo
---

<section id="inicio" class="hero-section min-h-screen flex items-center relative overflow-hidden">
    <!-- Video Background -->
    <video 
        id="hero-video"
        class="video-background" 
        autoplay 
        muted 
        loop    
        playsinline 
        preload="metadata"
    >
        <source id="hero-video-source" data-src="/videos/Oficina.mp4" type="video/mp4">
        <!-- Fallback image if video fails -->
        <img src="/images/personas-en-equipos-de-seguridad-en-su-lugar-de-trabajo.jpg" alt="Personas trabajando con equipos de seguridad" class="w-full h-full object-cover">
    </video>
    
    <!-- Video Loading Indicator -->
    <div id="video-loading" class="video-loading">
        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
    </div>
    
    <!-- Fallback Background Image -->
    <div id="video-fallback" class="absolute inset-0 bg-cover bg-center bg-no-repeat opacity-0 transition-opacity duration-1000" style="background-image: url('/images/personas-en-equipos-de-seguridad-en-su-lugar-de-trabajo.jpg')"></div>
    
    <!-- Overlay -->
    <div class="hero-overlay"></div>
    
    <!-- Content -->
    <div class="hero-content relative z-10 container mx-auto px-6 py-20">
        <div class="flex flex-col md:flex-row items-center justify-between max-w-7xl mx-auto">
            <!-- Texto: en móvil pasa a orden 2 -->
            <div class="text-center md:text-left mb-16 md:mb-0 md:w-1/2 animate-fade-in-up order-2 md:order-1">
                <h1 class="text-4xl md:text-7xl text-gray-800 mb-8 font-cinzel font-normal">Bienvenido</h1>
                <p class="text-xl text-gray-700 mb-8 max-w-lg">Tu socio estratégico en soluciones de personal temporal y contratación especializada.</p>
                <a href="#contacto" class="block md:inline-block mx-auto md:mx-0 px-12 py-4 border border-gray-600 text-white hover:bg-blue-600 hover:text-white hover:border-blue-600 transition-all duration-300 rounded-full text-xl font-cinzel tracking-wider uppercase text-center btn-primary" aria-label="Ponte en contacto">
                    Ponte en contacto
                </a>
            </div>
            <!-- Logo: en móvil pasa a orden 1 -->
            <div class="flex justify-center md:justify-end md:w-1/2 animate-fade-in-up animation-delay-300 order-1 md:order-2">
                <div class="text-center">
                    <picture>
                        <source srcset="/images/Logo.webp" type="image/webp">
                        <img src="/images/Logo.png" alt="Controllers RD Logo" class="h-72 md:h-96 object-contain animate-float" fetchpriority="high">
                    </picture>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
  // Configuración del video
  class VideoManager {
    private video: HTMLVideoElement | null = null;
    private videoSource: HTMLSourceElement | null = null;
    private loadingIndicator: HTMLElement | null = null;
    private fallbackElement: HTMLElement | null = null;
    private loadTimeout: number = 10000; // 10 segundos

    constructor() {
      this.init();
    }

    private init(): void {
      this.video = document.getElementById('hero-video') as HTMLVideoElement;
      this.videoSource = document.getElementById('hero-video-source') as HTMLSourceElement;
      this.loadingIndicator = document.getElementById('video-loading');
      this.fallbackElement = document.getElementById('video-fallback');

      if (this.video && this.videoSource) {
        this.setupVideo();
      }
    }

    private setupVideo(): void {
      if (!this.video || !this.videoSource) return;

      // Mostrar indicador de carga
      this.showLoading();

      // Configurar timeout para fallback
      const timeout = setTimeout(() => {
        this.showFallback();
      }, this.loadTimeout);

      // Event listeners para el video
      this.video.addEventListener('loadeddata', () => {
        clearTimeout(timeout);
        this.hideLoading();
        this.video!.style.opacity = '0.88';
      });

      this.video.addEventListener('error', () => {
        clearTimeout(timeout);
        this.showFallback();
      });

      // Cargar el video
      const videoSrc = this.videoSource.getAttribute('data-src');
      if (videoSrc) {
        this.videoSource.src = videoSrc;
        this.video.load();
      }
    }

    private showLoading(): void {
      if (this.loadingIndicator) {
        this.loadingIndicator.style.display = 'flex';
      }
    }

    private hideLoading(): void {
      if (this.loadingIndicator) {
        this.loadingIndicator.style.display = 'none';
      }
    }

    private showFallback(): void {
      this.hideLoading();
      if (this.video) {
        this.video.style.display = 'none';
      }
      if (this.fallbackElement) {
        this.fallbackElement.style.opacity = '1';
      }
      console.warn('Video failed to load, showing fallback image');
    }
  }

  // Inicializar cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    new VideoManager();
  });
</script>